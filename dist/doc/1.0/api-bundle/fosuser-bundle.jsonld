{"@context":"http://schema.org","@type":"CreativeWork","name":"FOSUser Bundle integration","text":"\u003ch1\u003eFOSUser Bundle integration\u003c/h1\u003e\n\n\u003cp\u003eThis bundle is shipped with a bridge for the \u003ca href=\"https://github.com/FriendsOfSymfony/FOSUserBundle\"\u003eFOSUserBundle\u003c/a\u003e. If the FOSUserBundle is enabled, this bridges registers to the persist, update and delete events to pass user objects to the UserManager, before redispatching the event.\u003c/p\u003e\n\n\u003ch2\u003eCreating a \u003ccode\u003eUser\u003c/code\u003e entity with serialization groups\u003c/h2\u003e\n\n\u003cp\u003eHere’s an example of declaration of a \u003ca href=\"https://github.com/FriendsOfSymfony/FOSUserBundle/blob/master/Resources/doc/index.rst#a-doctrine-orm-user-class\"\u003edoctrine ORM User class\u003c/a\u003e. As shown you can use serialization groups to hide properties like \u003ccode\u003eplainPassword\u003c/code\u003e (only in read) and \u003ccode\u003epassword\u003c/code\u003e. The properties shown are handled with the \u003ca href=\"serialization-groups-and-relations.jsonld#normalization\"\u003e\u003ccode\u003enormalizationContext\u003c/code\u003e\u003c/a\u003e, while the properties you can modify are handled with \u003ca href=\"serialization-groups-and-relations.jsonld#denormalization\"\u003e\u003ccode\u003edenormalizationContext\u003c/code\u003e\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eFirst register the following service:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-yaml\"\u003e# app/config/services.yml\n\nresource.user:\n        parent:    \u0026#34;api.resource\u0026#34;\n        arguments: [ \u0026#34;AppBundle\\\\Entity\\\\User\u0026#34; ]\n        calls:\n            -      method:    \u0026#34;initNormalizationContext\u0026#34;\n                   arguments: [ { groups: [ \u0026#34;user_read\u0026#34; ] } ]\n            -      method:    \u0026#34;initDenormalizationContext\u0026#34;\n                   arguments: [ { groups: [ \u0026#34;user_write\u0026#34; ] } ]\n        tags:      [ { name: \u0026#34;api.resource\u0026#34; } ]\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eThen create your User entity with serialization groups:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-php\"\u003e\u0026lt;?php\n\nnamespace AppBundle\\Entity;\n\nuse Doctrine\\ORM\\Mapping as ORM;\nuse FOS\\UserBundle\\Entity\\User as BaseUser;\nuse Symfony\\Component\\Serializer\\Annotation\\Groups;\nuse Symfony\\Bridge\\Doctrine\\Validator\\Constraints\\UniqueEntity;\n\n/**\n * @ORM\\Entity\n *\n * @UniqueEntity(\u0026#34;email\u0026#34;)\n * @UniqueEntity(\u0026#34;username\u0026#34;)\n */\nclass User extends BaseUser\n{\n    /**\n     * @ORM\\Id\n     * @ORM\\Column(type=\u0026#34;integer\u0026#34;)\n     * @ORM\\GeneratedValue(strategy=\u0026#34;AUTO\u0026#34;)\n     */\n    protected $id;\n\n    /**\n     * @var string The username of the author.\n     *\n     * @Groups({\u0026#34;user_read\u0026#34;, \u0026#34;user_write\u0026#34;})\n     */\n    protected $username;\n\n    /**\n     * @var string The email of the user.\n     *\n     * @Groups({\u0026#34;user_read\u0026#34;, \u0026#34;user_write\u0026#34;})\n     */\n    protected $email;\n\n    /**\n     * @var string Plain password. Used for model validation. Must not be persisted.\n     *\n     * @Groups({\u0026#34;user_write\u0026#34;})\n     */\n    protected $plainPassword;\n\n    /**\n     * @var boolean Shows that the user is enabled\n     *\n     * @Groups({\u0026#34;user_read\u0026#34;, \u0026#34;user_write\u0026#34;})\n     */\n    protected $enabled;\n\n    /**\n     * @var array Array, role(s) of the user\n     *\n     * @Groups({\u0026#34;user_read\u0026#34;, \u0026#34;user_write\u0026#34;})\n     */\n    protected $roles;\n}\n\u003c/code\u003e\u003c/pre\u003e\n","author":[{"@type":"Person","Name":"Kévin Dunglas","email":"dunglas@gmail.com"},{"@type":"Person","Name":"Stepan Anchugov","email":"kixxx1@gmail.com"},{"@type":"Person","Name":"Pierre-Henri Cumenge","email":"pierrehenric@theodo.fr"}],"dateCreated":"2015-09-04T11:55:15+02:00","dateModified":"2016-01-07T20:41:28+01:00"}