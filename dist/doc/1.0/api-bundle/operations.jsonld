{"@context":"http://schema.org","@type":"CreativeWork","name":"Operations","text":"\u003ch1\u003eOperations\u003c/h1\u003e\n\n\u003cp\u003eBy default, the following operations are automatically enabled:\u003c/p\u003e\n\n\u003cp\u003e\u003cem\u003eCollection\u003c/em\u003e\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eMethod\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eGET\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eRetrieve the (paginated) list of elements\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ePOST\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eCreate a new element\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003cp\u003e\u003cem\u003eItem\u003c/em\u003e\u003c/p\u003e\n\n\u003ctable\u003e\n\u003cthead\u003e\n\u003ctr\u003e\n\u003cth\u003eMethod\u003c/th\u003e\n\u003cth\u003eDescription\u003c/th\u003e\n\u003c/tr\u003e\n\u003c/thead\u003e\n\n\u003ctbody\u003e\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eGET\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eRetrieve element (mandatory operation)\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003ePUT\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eUpdate an element\u003c/td\u003e\n\u003c/tr\u003e\n\n\u003ctr\u003e\n\u003ctd\u003e\u003ccode\u003eDELETE\u003c/code\u003e\u003c/td\u003e\n\u003ctd\u003eDelete an element\u003c/td\u003e\n\u003c/tr\u003e\n\u003c/tbody\u003e\n\u003c/table\u003e\n\n\u003ch2\u003eDisabling operations\u003c/h2\u003e\n\n\u003cp\u003eIf you want to disable some operations (e.g. the \u003ccode\u003eDELETE\u003c/code\u003e operation), you must create manually applicable operations using\nthe operation factory class, \u003ccode\u003eDunglas\\ApiBundle\\Api\\Operation\\OperationFactory::createCollectionOperation()\u003c/code\u003e or/and \u003ccode\u003eDunglas\\ApiBundle\\Api\\Operation\\OperationFactory::createItemOperation()\u003c/code\u003e methods and then, register it in the resource with \u003ccode\u003eDunglas\\ApiBundle\\Api\\Resource::initCollectionOperations\u003c/code\u003e or/and \u003ccode\u003eDunglas\\ApiBundle\\Api\\Resource::initItemOperations\u003c/code\u003e.\u003c/p\u003e\n\n\u003cp\u003eThe following \u003ccode\u003eResource\u003c/code\u003e definition exposes a \u003ccode\u003eGET\u003c/code\u003e operation for its collection but not the \u003ccode\u003ePOST\u003c/code\u003e one:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-yaml\"\u003eservices:\n    resource.product.collection_operation.get:\n        class:     Dunglas\\ApiBundle\\Api\\Operation\\Operation\n        public:    false\n        factory:   [ \u0026#34;@api.operation_factory\u0026#34;, \u0026#34;createCollectionOperation\u0026#34; ]\n        arguments: [ \u0026#34;@resource.product\u0026#34;, \u0026#34;GET\u0026#34; ]\n\n    resource.product:\n        parent:    \u0026#34;api.resource\u0026#34;\n        arguments: [ \u0026#34;AppBundle\\\\Entity\\\\Product\u0026#34; ]\n        calls:\n            -      [ \u0026#34;initCollectionOperations\u0026#34;, [ [ \u0026#34;@resource.product.collection_operation.get\u0026#34; ] ] ]\n        tags:      [ { name: \u0026#34;api.resource\u0026#34; } ]\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eHowever, in the following example item operations will still be automatically registered. To disable them, call \u003ccode\u003einitItemOperations\u003c/code\u003e\nwith an empty array as first parameter:\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-yaml\"\u003e# ...\n\n    resource.product:\n        parent:    \u0026#34;api.resource\u0026#34;\n        arguments: [ \u0026#34;AppBundle\\\\Entity\\\\Product\u0026#34; ]\n        calls:\n            -      [ \u0026#34;initItemOperations\u0026#34;, [ [ ] ] ]\n            -      [ \u0026#34;initCollectionOperations\u0026#34;, [ [ \u0026#34;@resource.product.collection_operation.get\u0026#34; ] ] ]\n        tags:      [ { name: \u0026#34;api.resource\u0026#34; } ]\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003ch2\u003eCreating custom operations\u003c/h2\u003e\n\n\u003cp\u003eDunglasApiBundle allows registering custom operations for collections and items.\nCustom operations allow to customize routing information (like the URL and the HTTP method),\nthe controller to use (default to the built-in action of the \u003ccode\u003eResourceController\u003c/code\u003e applicable\nfor the given HTTP method) and a context that will be passed to the documentation generators.\u003c/p\u003e\n\n\u003cp\u003eA convenient factory is provided to build \u003ccode\u003eDunglas\\ApiBundle\\Api\\Operation\\Operation\u003c/code\u003e instances.\nThis factory guesses good default values for options such as the route name and its associated URL by inspecting the given \u003ccode\u003eResource\u003c/code\u003e instance. All guessed values can be overridden.\u003c/p\u003e\n\n\u003cp\u003eIf you want to use custom controller action, \u003ca href=\"controllers.jsonld\"\u003erefer to the dedicated documentation\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eDunglasApiBundle is smart enough to automatically register routes in the Symfony routing system and to document operations in the Hydra vocab.\u003c/p\u003e\n\n\u003cpre\u003e\u003ccode class=\"language-yaml\"\u003e    resource.product.item_operation.get:\n        class:     Dunglas\\ApiBundle\\Api\\Operation\\Operation\n        public:    false\n        factory:   [ \u0026#34;@api.operation_factory\u0026#34;, \u0026#34;createItemOperation\u0026#34; ]\n        arguments: [ \u0026#34;@resource.product\u0026#34;, \u0026#34;GET\u0026#34; ]\n\n    resource.product.item_operation.put:\n        class:     Dunglas\\ApiBundle\\Api\\Operation\\Operation\n        public:    false\n        factory:   [ \u0026#34;@api.operation_factory\u0026#34;, \u0026#34;createItemOperation\u0026#34; ]\n        arguments: [ \u0026#34;@resource.product\u0026#34;, \u0026#34;PUT\u0026#34; ]\n\n    resource.product.item_operation.custom_get:\n        class:   Dunglas\\ApiBundle\\Api\\Operation\\Operation\n        public:  false\n        factory: [ \u0026#34;@api.operation_factory\u0026#34;, \u0026#34;createItemOperation\u0026#34; ]\n        arguments:\n            -    \u0026#34;@resource.product\u0026#34;               # Resource\n            -    [ \u0026#34;GET\u0026#34;, \u0026#34;HEAD\u0026#34; ]                 # Methods\n            -    \u0026#34;/products/{id}/custom\u0026#34;           # Path\n            -    \u0026#34;AppBundle:Custom:custom\u0026#34;         # Controller\n            -    \u0026#34;my_custom_route\u0026#34;                 # Route name\n            -    # Context (will be present in Hydra documentation)\n                 \u0026#34;@type\u0026#34;:       \u0026#34;hydra:Operation\u0026#34;\n                 \u0026#34;hydra:title\u0026#34;: \u0026#34;A custom operation\u0026#34;\n                 \u0026#34;returns\u0026#34;:     \u0026#34;xmls:string\u0026#34;\n\n    resource.product:\n        parent:    \u0026#34;api.resource\u0026#34;\n        arguments: [ \u0026#34;AppBundle\\\\Entity\\\\Product\u0026#34; ]\n        calls:\n            -      method:    \u0026#34;initItemOperations\u0026#34;\n                   arguments: [ [ \u0026#34;@resource.product.item_operation.get\u0026#34;, \u0026#34;@resource.product.item_operation.put\u0026#34;, \u0026#34;@resource.product.item_operation.custom_get\u0026#34; ] ]\n        tags:      [ { name: \u0026#34;api.resource\u0026#34; } ]\n\u003c/code\u003e\u003c/pre\u003e\n\n\u003cp\u003eAdditionally to the default generated \u003ccode\u003eGET\u003c/code\u003e and \u003ccode\u003ePUT\u003c/code\u003e operations, this definition will expose a new \u003ccode\u003eGET\u003c/code\u003e operation for\nthe \u003ccode\u003e/products/{id}/custom\u003c/code\u003e URL. When this URL is opened, the \u003ccode\u003eAppBundle:Custom:custom\u003c/code\u003e controller is called.\u003c/p\u003e\n\n\u003cp\u003ePrevious chapter: \u003ca href=\"nelmio-api-doc.jsonld\"\u003eNelmioApiDocBundle integration\u003c/a\u003e\u003cbr/\u003e\nNext chapter: \u003ca href=\"data-providers.jsonld\"\u003eData providers\u003c/a\u003e\u003c/p\u003e\n","author":[{"@type":"Person","Name":"KÃ©vin Dunglas","email":"dunglas@gmail.com"},{"@type":"Person","Name":"Stepan Anchugov","email":"kixxx1@gmail.com"},{"@type":"Person","Name":"Youssef El Montaser","email":"yelmontaser@users.noreply.github.com"},{"@type":"Person","Name":"Pierre-Henri Cumenge","email":"pierrehenric@theodo.fr"},{"@type":"Person","Name":"Pierre-Henri Cumenge","email":"pierrehenric@theodo.fr"},{"@type":"Person","Name":"Kevin Saliou","email":"kevin@saliou.name"}],"dateCreated":"2015-09-04T11:55:15+02:00","dateModified":"2016-05-21T17:49:17+02:00"}