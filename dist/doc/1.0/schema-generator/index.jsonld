{"@context":"http://schema.org","@type":"CreativeWork","name":"The schema generator","text":"\u003ch1\u003eThe schema generator\u003c/h1\u003e\n\n\u003cp\u003e\u003ccode\u003eschema\u003c/code\u003e is a command line tool part of \u003ca href=\"https://api-platform.com\"\u003ethe API Platform framework\u003c/a\u003e that instantly generates\na PHP data model from the \u003ca href=\"http://schema.org\"\u003eSchema.org\u003c/a\u003e vocabulary.\nBrowse Schema.org, choose the types and properties you need, run our code generator and you’re done! You get\na fully featured PHP data model including:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eA set of PHP entities with properties, constants (enum values), getters, setters, adders and removers. The class\nhierarchy provided by Schema.org will be translated to a PHP class hierarchy with parents as \u003ccode\u003eabstract\u003c/code\u003e classes. The generated\ncode complies with \u003ca href=\"http://www.php-fig.org/\"\u003ePSR\u003c/a\u003e coding standards.\u003c/li\u003e\n\u003cli\u003eFull high-quality PHPDoc for classes, properties, constants and methods extracted from Schema.org.\u003c/li\u003e\n\u003cli\u003eDoctrine ORM annotation mapping including database columns with type guessing, relations with cardinality guessing, class\ninheritance (through the \u003ccode\u003e@AbstractSuperclass\u003c/code\u003e annotation).\u003c/li\u003e\n\u003cli\u003eData validation through \u003ca href=\"http://symfony.com/doc/current/book/validation.html\"\u003eSymfony Validator\u003c/a\u003e annotations including\ndata type validation, enum support (choices) and check for required properties.\u003c/li\u003e\n\u003cli\u003eInterfaces and \u003ca href=\"http://doctrine-orm.readthedocs.org/en/latest/cookbook/resolve-target-entity-listener.html\"\u003eDoctrine \u003ccode\u003eResolveTargetEntityListener\u003c/code\u003e\u003c/a\u003e\nsupport.\u003c/li\u003e\n\u003cli\u003eCustom PHP namespace support.\u003c/li\u003e\n\u003cli\u003eList of values provided by Schema.org with \u003ca href=\"https://github.com/myclabs/php-enum\"\u003ePHP Enum\u003c/a\u003e classes.\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003cp\u003eBonus:\u003c/p\u003e\n\n\u003cul\u003e\n\u003cli\u003eThe code generator is fully configurable and extensible: all features can be deactivated (e.g.: the Doctrine mapping generator)\nand custom generator can be added (e.g.: a Doctrine ODM mapping generator).\u003c/li\u003e\n\u003cli\u003eThe generated code can be used as is in a \u003ca href=\"http://symfony.com\"\u003eSymfony\u003c/a\u003e app (but it will work too in a raw PHP project\nor any other framework including \u003ca href=\"http://laravel.com\"\u003eLaravel\u003c/a\u003e and \u003ca href=\"http://framework.zend.com/\"\u003eZend Framework\u003c/a\u003e).\u003c/li\u003e\n\u003c/ul\u003e\n\n\u003ch2\u003eWhat is Schema.org?\u003c/h2\u003e\n\n\u003cp\u003eSchema.org is a vocabulary representing common data structures and their relations. Schema.org can be exposed as \u003ca href=\"http://en.wikipedia.org/wiki/JSON-LD\"\u003eJSON-LD\u003c/a\u003e,\n\u003ca href=\"https://en.wikipedia.org/wiki/Microdata_(HTML)\"\u003emicrodata\u003c/a\u003e and \u003ca href=\"http://en.wikipedia.org/wiki/RDFa\"\u003eRDFa\u003c/a\u003e.\nExtracting semantical data exposed in the Schema.org vocabulary is supported by a growing number of companies including\nGoogle (Search, Gmail), Yahoo!, Bing and Yandex.\u003c/p\u003e\n\n\u003ch2\u003eWhy use Schema.org data to generate a PHP model?\u003c/h2\u003e\n\n\u003ch3\u003eDon’t Reinvent The Wheel\u003c/h3\u003e\n\n\u003cp\u003eData models provided by Schema.org are popular and were proven efficient. They cover a broad spectrum of topics including\ncreative works, e-commerce, events, medicine, social networking, people, postal addresses, organization data, places or reviews.\nSchema.org has its root in \u003ca href=\"http://schema.rdfs.org/mappings.html\"\u003ea ton of preexisting well designed vocabularies\u003c/a\u003e and is\nsuccessfully used by more and more websites and applications.\u003c/p\u003e\n\n\u003cp\u003ePick schemas applicable to your application, generate your PHP model, then customize and specialize it to fit your needs.\u003c/p\u003e\n\n\u003ch3\u003eImprove SEO and user experience\u003c/h3\u003e\n\n\u003cp\u003eAdding Schema.org markup to websites and apps increase their ranking in search engines results and enable awesome features\nsuch as \u003ca href=\"https://support.google.com/webmasters/answer/99170?hl=en\"\u003eGoogle Rich Snippets\u003c/a\u003e and \u003ca href=\"https://developers.google.com/gmail/markup/overview\"\u003eGmail markup\u003c/a\u003e.\u003c/p\u003e\n\n\u003cp\u003eMapping your app data model to Schema.org structures can be tedious. When using the generator, your data model will be\nderived from Schema.org. Adding microdata markup to your templates or serializing your data as JSON-LD will not require\nspecific mapping nor adaptation. It’s a matter of minutes.\u003c/p\u003e\n\n\u003ch3\u003eBe ready for the future\u003c/h3\u003e\n\n\u003cp\u003eSchema.org improves the interoperability of your applications. Used with hypermedia technologies such as \u003ca href=\"http://www.hydra-cg.com/\"\u003eHydra\u003c/a\u003e\nit’s a big step towards the semantic and machine readable web.\nIt opens the way to generic web API clients able to extract and process data from any website or app using such technologies.\u003c/p\u003e\n\n\u003ch2\u003eDocumentation\u003c/h2\u003e\n\n\u003cul\u003e\n\u003cli\u003e\u003ca href=\"getting-started.jsonld\"\u003eGetting Started\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href=\"configuration.jsonld\"\u003eConfiguration\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n","author":[{"@type":"Person","Name":"Kévin Dunglas","email":"dunglas@gmail.com"},{"@type":"Person","Name":"Kévin Dunglas","email":"dunglas@gmail.com"},{"@type":"Person","Name":"Kévin Dunglas","email":"dunglas@gmail.com"},{"@type":"Person","Name":"Kévin Dunglas","email":"dunglas@gmail.com"},{"@type":"Person","Name":"Stepan Anchugov","email":"kixxx1@gmail.com"}],"dateCreated":"2015-09-04T12:59:28+02:00","dateModified":"2015-09-22T13:36:13+05:00"}